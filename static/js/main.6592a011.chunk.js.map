{"version":3,"sources":["Store/userSliceReducer.ts","Store/reducers.ts","Assets/logo.svg","Helpers/const.ts","Helpers/routes.ts","Templates/Layout/Header/index.tsx","Templates/Pages/ComicsForm/index.tsx","Templates/Components/Alphabet/index.tsx","Templates/Components/ComicsBlock/index.tsx","Templates/Components/Loader/index.tsx","Templates/Pages/ComicsList/index.tsx","Hooks/useGetComicsList.ts","Helpers/sort.ts","Store/hooks.ts","Templates/Pages/ComicsItem/index.tsx","Hooks/useGetComicsItem.ts","Templates/Pages/NotFound/index.tsx","Templates/Pages/LoginPage/index.tsx","Templates/Layout/Main/index.tsx","Templates/Layout/Footer/index.tsx","Templates/Layout/index.tsx","App.tsx","Store/store.ts","index.tsx"],"names":["initialState","user","adminMode","localStorage","getItem","userSlice","createSlice","name","reducers","checkUser","state","action","payload","setItem","userSliceReducer","reducer","rootReducer","combineReducers","ENGLISH_ALPHABET","RUSSIAN_ALPHABET","FIELDS","db","ui","LINK","ROUTES","comicsItem","id","comicsList","comicsForm","api","getComicsById","process","getComicsList","addNewComics","deleteComics","updateComics","Header","lineClass","className","src","logo","alt","width","height","href","ComicsForm","useForm","register","handleSubmit","reset","fieldClasses","inputClasses","textareaClasses","notify","message","toast","onSubmit","data","authors","split","artists","characters","genres","cover","title","newComics","description","edition","year","includes","volume","book","publisher","original","original_publisher","size","FR","FileReader","addEventListener","event","target","result","readAsDataURL","axios","post","then","response","console","log","catch","error","type","placeholder","Alphabet","alphabet","currentLetter","handleChooseSection","handleClick","currentTarget","map","letter","clsx","onClick","ComicsBlock","comics","useState","collection","setCollection","sell","setSell","wishlist","setWishlist","_id","Loader","ComicsList","getAllComics","a","get","useQuery","isLoading","isFetching","useGetComicsList","isListLoading","isListFetching","listError","books","setBooks","library","setLibrary","isBooksLoading","setIsBooksLoading","setCurrentLetter","searchValue","setSearchValue","booksByLetter","filter","substring","toLowerCase","useEffect","newCollection","titles","item","createNewSortInstance","comparer","Intl","Collator","undefined","numeric","sensitivity","compare","naturalSort","asc","find","sorting","value","onChange","val","trim","filteredItems","replace","length","initialIsOpen","useAppSelector","useSelector","ComicsItem","useParams","getComicsItem","params","useGetComicsItem","isComicsLoading","comicsError","navigate","useNavigate","buttonClasses","deleteComicsItem","field","currentField","defaultValue","disabled","Array","isArray","join","alert","NotFound","LoginPage","dispatch","useDispatch","method","style","actions","Main","path","element","Footer","Layout","App","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","keepPreviousData","store","configureStore","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6592a011.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\n\ntype UserStateProps = {\n\tuser: string;\n\tadminMode: boolean;\n};\n\nconst initialState: UserStateProps = {\n\tuser: \"\",\n\tadminMode: localStorage.getItem(\"adminMode\") === \"true\",\n};\n\nexport const userSlice = createSlice({\n\tname: \"user\",\n\tinitialState,\n\treducers: {\n\t\tcheckUser(state, action: PayloadAction<string>) {\n\t\t\tstate.user = action.payload;\n\t\t\tstate.adminMode = true;\n\t\t\tlocalStorage.setItem(\"adminMode\", \"true\");\n\t\t},\n\t},\n});\n\nexport const userSliceReducer = userSlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { userSliceReducer } from \"Store/userSliceReducer\";\n\nexport const rootReducer = combineReducers({\n\tuser: userSliceReducer,\n});\n","export default __webpack_public_path__ + \"static/media/logo.9bfd69cb.svg\";","export const ENGLISH_ALPHABET = [\n\t\"a\",\n\t\"b\",\n\t\"c\",\n\t\"d\",\n\t\"e\",\n\t\"f\",\n\t\"g\",\n\t\"h\",\n\t\"i\",\n\t\"j\",\n\t\"k\",\n\t\"l\",\n\t\"m\",\n\t\"n\",\n\t\"o\",\n\t\"p\",\n\t\"q\",\n\t\"r\",\n\t\"s\",\n\t\"t\",\n\t\"u\",\n\t\"v\",\n\t\"w\",\n\t\"x\",\n\t\"y\",\n\t\"z\",\n];\n\nexport const RUSSIAN_ALPHABET = [\n\t\"а\",\n\t\"б\",\n\t\"в\",\n\t\"г\",\n\t\"д\",\n\t\"е\",\n\t\"ё\",\n\t\"ж\",\n\t\"з\",\n\t\"и\",\n\t\"й\",\n\t\"к\",\n\t\"л\",\n\t\"м\",\n\t\"н\",\n\t\"о\",\n\t\"п\",\n\t\"р\",\n\t\"с\",\n\t\"т\",\n\t\"у\",\n\t\"ф\",\n\t\"х\",\n\t\"ц\",\n\t\"ч\",\n\t\"ш\",\n\t\"щ\",\n\t\"ь\",\n\t\"ы\",\n\t\"ъ\",\n\t\"э\",\n\t\"ю\",\n\t\"я\",\n];\n\nexport const FIELDS = [\n\t{ db: \"title\", ui: \"Название\" },\n\t{ db: \"authors\", ui: \"Авторы\" },\n\t{ db: \"artists\", ui: \"Художники\" },\n\t{ db: \"description\", ui: \"Описание\" },\n\t{ db: \"characters\", ui: \"Персонаж/персонажи\" },\n\t{ db: \"genres\", ui: \"Жанр/жанры\" },\n\t{ db: \"edition\", ui: \"Тип издания\" },\n\t{ db: \"includes\", ui: \"Включает выпуски\" },\n\t{ db: \"volume\", ui: \"Том (серия), например, Venom Volume 1\" },\n\t{ db: \"book\", ui: \"Номер тома (книга в серии - 1, 2, 3 и т.д)\" },\n\t{ db: \"year\", ui: \"Год издания\" },\n\t{ db: \"publisher\", ui: \"Издатель\" },\n\t{ db: \"original\", ui: \"Год издания оригинала\" },\n\t{ db: \"original_publisher\", ui: \"Издатель оригинала\" },\n\t{ db: \"cover\", ui: \"Обложка\" },\n];\n\nexport const ADMIN_MODE = false;\n","const LINK = \"/parrot-collection/#\";\n\nexport const ROUTES = {\n\tcomicsItem: (id: string): string => `${LINK}/comics/${id}`,\n\tcomicsList: `${LINK}/comics`,\n\tcomicsForm: `${LINK}/add-comics`,\n\tapi: {\n\t\tgetComicsById: (id: string | undefined): string =>\n\t\t\t`${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/${id}`,\n\t\tgetComicsList: `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/list`,\n\t\taddNewComics: `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/add`,\n\t\tdeleteComics: (id: string | undefined): string =>\n\t\t\t`${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/${id}/delete`,\n\t\tupdateComics: (id: string | undefined): string =>\n\t\t\t`${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/${id}/update`,\n\t},\n};\n","import React from \"react\";\nimport logo from \"Assets/logo.svg\";\nimport { ROUTES } from \"Helpers\";\n\nexport const Header = (): JSX.Element => {\n\tconst lineClass = \"px-2 inline-block underline underline-offset-4\";\n\n\treturn (\n\t\t<header className=\"p-0.5 w-full bg-yellow-500\">\n\t\t\t<img\n\t\t\t\tsrc={logo}\n\t\t\t\talt=\"Parrot\"\n\t\t\t\twidth=\"60px\"\n\t\t\t\theight=\"auto\"\n\t\t\t\tclassName=\"mx-auto\"\n\t\t\t/>\n\t\t\t<a className={lineClass} href={ROUTES.comicsList}>\n\t\t\t\tГлавная\n\t\t\t</a>\n\t\t\t<a className={lineClass} href={ROUTES.comicsForm}>\n\t\t\t\tДобавить комикс\n\t\t\t</a>\n\t\t</header>\n\t);\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { ComicsFormProps } from \"Types\";\nimport { ROUTES } from \"Helpers\";\n\nexport const ComicsForm = (): JSX.Element => {\n\tconst { register, handleSubmit, reset } = useForm();\n\tconst formClasses = \"flex flex-col max-w-xs mt-2 mx-auto\";\n\tconst fieldClasses =\n\t\t\"mb-2 px-2 border border-yellow-400\trounded focus:outline-none focus:border-pink-300\";\n\tconst inputClasses = `${fieldClasses} h-10 appearance-none`;\n\tconst textareaClasses = `${fieldClasses} pt-1 h-20 resize-none`;\n\tconst buttonClasses =\n\t\t\"h-10 border border-transparent rounded bg-yellow-400 font-bold text-white\";\n\n\tconst notify = (message: string) => toast(message);\n\n\tconst onSubmit = (data: ComicsFormProps) => {\n\t\tconst authors = data.authors.split(\", \");\n\t\tconst artists = data.artists.split(\", \");\n\t\tconst characters = data.characters.split(\", \");\n\t\tconst genres = data.genres.split(\", \");\n\t\tlet cover: string | ArrayBuffer | null = \"\";\n\n\t\tif (data.title) {\n\t\t\tconst newComics = {\n\t\t\t\ttitle: data.title,\n\t\t\t\tauthors,\n\t\t\t\tartists,\n\t\t\t\tdescription: data.description,\n\t\t\t\tcharacters,\n\t\t\t\tcover,\n\t\t\t\tgenres,\n\t\t\t\tedition: data.edition,\n\t\t\t\tyear: data.year,\n\t\t\t\tincludes: data.includes,\n\t\t\t\tvolume: data.volume,\n\t\t\t\tbook: data.book,\n\t\t\t\tpublisher: data.publisher,\n\t\t\t\toriginal: data.original,\n\t\t\t\toriginal_publisher: data.original_publisher,\n\t\t\t};\n\n\t\t\tif (data.cover[0]) {\n\t\t\t\tif (data.cover[0].size > 100000) {\n\t\t\t\t\tnotify(\"Большой размер файла обложки\");\n\t\t\t\t} else {\n\t\t\t\t\tconst FR = new FileReader();\n\t\t\t\t\tFR.addEventListener(\"load\", (event) => {\n\t\t\t\t\t\tcover =\n\t\t\t\t\t\t\tevent.target !== null && event.target.result\n\t\t\t\t\t\t\t\t? event.target.result\n\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t});\n\t\t\t\t\tFR.readAsDataURL(data.cover[0]);\n\n\t\t\t\t\taxios\n\t\t\t\t\t\t.post(ROUTES.api.addNewComics, newComics)\n\t\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\t\tconsole.log({ response });\n\t\t\t\t\t\t\treset();\n\t\t\t\t\t\t\tnotify(\"Добавлено!\");\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taxios\n\t\t\t\t\t.post(ROUTES.api.addNewComics, newComics)\n\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\tconsole.log({ response });\n\t\t\t\t\t\treset();\n\t\t\t\t\t\tnotify(\"Добавлено!\");\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName={formClasses}\n\t\t\tname=\"add-comics\"\n\t\t\tonSubmit={handleSubmit(onSubmit)}\n\t\t>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Название\"\n\t\t\t\t{...register(\"title\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Авторы\"\n\t\t\t\t{...register(\"authors\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Художники\"\n\t\t\t\t{...register(\"artists\")}\n\t\t\t/>\n\t\t\t<textarea\n\t\t\t\tclassName={textareaClasses}\n\t\t\t\tplaceholder=\"Описание\"\n\t\t\t\t{...register(\"description\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Персонаж/персонажи\"\n\t\t\t\t{...register(\"characters\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Жанр/жанры\"\n\t\t\t\t{...register(\"genres\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Тип издания\"\n\t\t\t\t{...register(\"edition\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Включает выпуски\"\n\t\t\t\t{...register(\"includes\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Том (серия), например, Venom Volume 1\"\n\t\t\t\t{...register(\"volume\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"Номер тома (книга в серии - 1, 2, 3 и т.д)\"\n\t\t\t\t{...register(\"book\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"Год издания\"\n\t\t\t\t{...register(\"year\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Издатель\"\n\t\t\t\t{...register(\"publisher\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"Год издания оригинала\"\n\t\t\t\t{...register(\"original\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Издатель оригинала\"\n\t\t\t\t{...register(\"original_publisher\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={inputClasses}\n\t\t\t\ttype=\"file\"\n\t\t\t\tplaceholder=\"Обложка\"\n\t\t\t\t{...register(\"cover\")}\n\t\t\t/>\n\t\t\t<button type=\"submit\" className={buttonClasses}>\n\t\t\t\tДобавить\n\t\t\t</button>\n\t\t\t<ToastContainer />\n\t\t</form>\n\t);\n};\n","import React, { MouseEvent } from \"react\";\nimport clsx from \"classnames\";\nimport \"./style.scss\";\n\ntype AlphabetProps = {\n\talphabet: string[];\n\tcurrentLetter: string;\n\thandleChooseSection: (letter: string) => void;\n};\n\nexport const Alphabet = ({\n\talphabet,\n\tcurrentLetter,\n\thandleChooseSection,\n}: AlphabetProps): JSX.Element => {\n\tconst alphabetClass = \"alphabet mb-2 flex justify-center flex-wrap\";\n\tconst letterClass =\n\t\t\"alphabet__letter mx-px px-1 h-5 leading-5 cursor-pointer border-transparent border-solid border border-transparent uppercase hover:border-yellow-500\";\n\tconst activeLetterClass = \"border-yellow-500\";\n\n\tconst handleClick = (event: MouseEvent) =>\n\t\thandleChooseSection(event.currentTarget.id);\n\n\treturn (\n\t\t<div className={alphabetClass}>\n\t\t\t{alphabet.map((letter) => (\n\t\t\t\t<p\n\t\t\t\t\tkey={letter}\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\tletterClass,\n\t\t\t\t\t\tcurrentLetter === letter && activeLetterClass\n\t\t\t\t\t)}\n\t\t\t\t\tid={letter}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t>\n\t\t\t\t\t{letter}\n\t\t\t\t</p>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { ROUTES } from \"Helpers\";\nimport { ComicsProps } from \"Types\";\nimport \"Components/ComicsBlock/style.scss\";\n\nexport const ComicsBlock = (comics: ComicsProps): JSX.Element => {\n\tconst [collection, setCollection] = useState(false);\n\tconst [sell, setSell] = useState(false);\n\tconst [wishlist, setWishlist] = useState(false);\n\n\tconst handleClick = (type: \"collection\" | \"read\" | \"wishlist\") => {\n\t\tswitch (type) {\n\t\t\tcase \"collection\":\n\t\t\t\tif (collection === false && wishlist === true) {\n\t\t\t\t\tsetWishlist(false);\n\t\t\t\t}\n\t\t\t\tsetCollection(!collection);\n\t\t\t\tbreak;\n\t\t\tcase \"read\":\n\t\t\t\tsetSell(!sell);\n\t\t\t\tbreak;\n\t\t\tcase \"wishlist\":\n\t\t\t\tsetWishlist(!wishlist);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"book grid\">\n\t\t\t{comics.cover ? (\n\t\t\t\t<a className=\"block w-full h-full\" href={ROUTES.comicsItem(comics._id)}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"book__img mx-auto mb-2 hover:cursor-pointer\"\n\t\t\t\t\t\tsrc={comics.cover}\n\t\t\t\t\t\talt={comics.title}\n\t\t\t\t\t/>\n\t\t\t\t</a>\n\t\t\t) : (\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"block book__img book__img--mock mx-auto mb-2\"\n\t\t\t\t\thref={ROUTES.comicsItem(comics._id)}\n\t\t\t\t></a>\n\t\t\t)}\n\t\t\t<p className=\"book__title mx-auto text-sm\">{comics.title}</p>\n\t\t\t<div className=\"book__buttons mt-3 mx-auto flex justify-between\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n\t\t\t\t\tdata-type=\"collection\"\n\t\t\t\t\tdata-status={collection}\n\t\t\t\t\tonClick={() => handleClick(\"collection\")}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n\t\t\t\t\tdata-type=\"read\"\n\t\t\t\t\tdata-status={sell}\n\t\t\t\t\tonClick={() => handleClick(\"read\")}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n\t\t\t\t\tdata-type=\"wishlist\"\n\t\t\t\t\tdata-status={wishlist}\n\t\t\t\t\tonClick={() => handleClick(\"wishlist\")}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nexport const Loader = (): JSX.Element => {\n\treturn (\n\t\t<div className=\"loader-wrapper\">\n\t\t\t<div className=\"loader\">\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<div className=\"left\"></div>\n\t\t\t\t\t<div className=\"middle\"></div>\n\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { Alphabet } from \"Components\";\nimport React, { useEffect, useState } from \"react\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ComicsBlock } from \"../../Components/ComicsBlock\";\nimport { Loader } from \"../../Components/Loader\";\nimport { ComicsProps } from \"Types\";\nimport { useGetComicsList } from \"Hooks\";\nimport { ENGLISH_ALPHABET, RUSSIAN_ALPHABET, sorting } from \"Helpers\";\n\nimport \"./style.scss\";\n\nexport function ComicsList(): JSX.Element {\n\tconst {\n\t\tisLoading: isListLoading,\n\t\tisFetching: isListFetching,\n\t\terror: listError,\n\t\tdata: comicsList,\n\t} = useGetComicsList();\n\n\tconst [books, setBooks] = useState<ComicsProps[]>([]);\n\tconst [library, setLibrary] = useState<ComicsProps[]>([]);\n\tconst [isBooksLoading, setIsBooksLoading] = useState(false);\n\tconst [currentLetter, setCurrentLetter] = useState(\"\");\n\tconst [searchValue, setSearchValue] = useState(\"\");\n\n\tconst handleChangeSearchValue = (\n\t\tevent: React.ChangeEvent<HTMLInputElement>\n\t) => {\n\t\tsetSearchValue(event.target.value);\n\t\tsetCurrentLetter(\"\");\n\t\tconst val = event.target.value.trim();\n\t\tconst filteredItems = library.filter((book) =>\n\t\t\tbook.title\n\t\t\t\t.toLowerCase()\n\t\t\t\t.replace(\".\", \"\")\n\t\t\t\t.replace(\",\", \"\")\n\t\t\t\t.replace(\"-\", \" \")\n\t\t\t\t.replace(\"(\", \"\")\n\t\t\t\t.replace(\")\", \"\")\n\t\t\t\t.includes(val.toLowerCase().replace(\".\", \"\").replace(\"-\", \" \"))\n\t\t);\n\t\tsetBooks(filteredItems);\n\t};\n\n\tconst handleChooseSection = (letter: string) => {\n\t\tsetSearchValue(\"\");\n\t\tsetCurrentLetter(letter);\n\n\t\tconst booksByLetter = library.filter(\n\t\t\t(book) => book.title.substring(0, 1).toLowerCase() === letter\n\t\t);\n\t\tsetBooks(booksByLetter);\n\t};\n\n\tconst handleClickAll = () => {\n\t\tsetBooks(library);\n\t\tsetCurrentLetter(\"\");\n\t};\n\n\tuseEffect(() => {\n\t\tif (comicsList) {\n\t\t\tsetIsBooksLoading(true);\n\n\t\t\tconst newCollection = sorting(comicsList) as ComicsProps[];\n\n\t\t\tsetBooks(newCollection);\n\t\t\tsetLibrary(newCollection);\n\t\t\tsetIsBooksLoading(false);\n\t\t}\n\t}, [comicsList]);\n\n\treturn (\n\t\t<>\n\t\t\t{comicsList && (\n\t\t\t\t<>\n\t\t\t\t\t<Alphabet\n\t\t\t\t\t\talphabet={RUSSIAN_ALPHABET}\n\t\t\t\t\t\tcurrentLetter={currentLetter}\n\t\t\t\t\t\thandleChooseSection={handleChooseSection}\n\t\t\t\t\t/>\n\t\t\t\t\t<Alphabet\n\t\t\t\t\t\talphabet={ENGLISH_ALPHABET}\n\t\t\t\t\t\tcurrentLetter={currentLetter}\n\t\t\t\t\t\thandleChooseSection={handleChooseSection}\n\t\t\t\t\t/>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName=\"mx-auto w-20 cursor-pointer border-transparent border-solid border border-transparent hover:border-yellow-500\"\n\t\t\t\t\t\tonClick={handleClickAll}\n\t\t\t\t\t>\n\t\t\t\t\t\tВсе\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"search mt-5 mb-8 flex justify-center items-center gap-2.5\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Название комикса\"\n\t\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\t\tclassName=\"input px-2.5 block h-7 max-w-xs w-full border border-yellow-300 rounded-md outline-none focus:border-pink-300\"\n\t\t\t\t\t\t\tonChange={handleChangeSearchValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"counter w-14 border border-yellow-300 rounded-md\">\n\t\t\t\t\t\t\t{books.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"list m-auto flex justify-center flex-wrap \">\n\t\t\t\t\t\t{books.length > 0 ? (\n\t\t\t\t\t\t\tbooks.map((comics) => (\n\t\t\t\t\t\t\t\t<ComicsBlock key={comics._id} {...comics} />\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>Ничего не найдено :(</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{(isListLoading || isBooksLoading || isListFetching) && <Loader />}\n\t\t\t{listError && <p>Ничего не найдено :(</p>}\n\t\t\t<ReactQueryDevtools initialIsOpen={false} />\n\t\t</>\n\t);\n}\n","import axios from \"axios\";\nimport { ROUTES } from \"Helpers\";\nimport { useQuery } from \"react-query\";\nimport { UseGetComicsListProps } from \"Types\";\n\nexport const useGetComicsList = (): UseGetComicsListProps => {\n\tconst getAllComics = async () => {\n\t\tconst { data } = await axios.get(ROUTES.api.getComicsList);\n\t\treturn data;\n\t};\n\n\tconst { isLoading, isFetching, error, data } = useQuery(\n\t\t\"comics\",\n\t\tgetAllComics\n\t);\n\n\treturn { isLoading, isFetching, error, data };\n};\n","import { ComicsProps } from \"Types\";\nimport { createNewSortInstance } from \"fast-sort\";\n\nexport const sorting = (\n\tcomicsList: ComicsProps[]\n): (ComicsProps | undefined)[] => {\n\tconst titles = comicsList.map((item) => item.title);\n\n\tconst naturalSort = createNewSortInstance({\n\t\tcomparer: new Intl.Collator(undefined, {\n\t\t\tnumeric: true,\n\t\t\tsensitivity: \"base\",\n\t\t}).compare,\n\t});\n\n\tconst sortedTitles = naturalSort(titles).asc();\n\n\tconst sotredList = sortedTitles.map((title) =>\n\t\tcomicsList.find((item) => item.title === title)\n\t);\n\n\treturn sotredList;\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"Store/types\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ComicsProps } from \"Types\";\nimport { Loader } from \"Components/Loader\";\nimport { useGetComicsItem } from \"Hooks\";\nimport { FIELDS, ROUTES } from \"Helpers\";\nimport \"Pages/ComicsItem/style.scss\";\nimport { useAppSelector } from \"Store/hooks\";\n\nexport const ComicsItem = (): JSX.Element => {\n\tconst { adminMode } = useAppSelector((state) => state.user);\n\tconst { _id } = useParams<{ _id: string }>();\n\tconst {\n\t\tisLoading: isComicsLoading,\n\t\terror: comicsError,\n\t\tdata: comics,\n\t\tisFetching,\n\t} = useGetComicsItem(_id);\n\n\tconst { register, handleSubmit } = useForm();\n\tconst navigate = useNavigate();\n\n\tconst fieldClasses =\n\t\t\"my-2 px-2 w-full border border-yellow-400\trounded focus:outline-none focus:border-pink-300\";\n\tconst inputClasses = `${fieldClasses} h-10 appearance-none`;\n\tconst textareaClasses = `${fieldClasses} pt-1 h-20 resize-none`;\n\tconst buttonClasses = \"mt-4 mx-auto block w-48 h-8 bg-yellow-500 text-white\";\n\n\tconst deleteComicsItem = async () =>\n\t\tawait axios\n\t\t\t.get<string>(ROUTES.api.deleteComics(_id), {\n\t\t\t\tparams: {\n\t\t\t\t\t_id,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((response) =>\n\t\t\t\tresponse.data === \"Ok\" ? navigate(\"/comics\") : console.log({ response })\n\t\t\t);\n\n\tconst handleDeleteComics = () => {\n\t\talert(\"Вы уверены?\");\n\t\tdeleteComicsItem();\n\t};\n\n\tconst notify = (message: string) => toast(message);\n\n\tconst onSubmit = (data: ComicsProps) => {\n\t\taxios\n\t\t\t.post<string>(ROUTES.api.updateComics(_id), data)\n\t\t\t.then((response) =>\n\t\t\t\tresponse.data === \"Ok\"\n\t\t\t\t\t? notify(\"Информация о комиксе обновлена\")\n\t\t\t\t\t: notify(\"При обновлении произошла ошибка\")\n\t\t\t);\n\t};\n\n\tcomicsError && console.log({ comicsError });\n\n\treturn (\n\t\t<>\n\t\t\t{comicsError && <p>При загрузке данных произошла ошибка</p>}\n\t\t\t{(isComicsLoading || isFetching) && <Loader />}\n\t\t\t{comics && !isFetching && (\n\t\t\t\t<>\n\t\t\t\t\t<form className=\"mx-auto max-w-lg\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t{comics.cover ? (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"book__img mx-auto mb-2 hover:cursor-pointer\"\n\t\t\t\t\t\t\t\tsrc={comics.cover}\n\t\t\t\t\t\t\t\talt={comics.title}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"book__img book__img--mock mx-auto mb-2 hover:cursor-pointer\"></div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{FIELDS.map((field) => {\n\t\t\t\t\t\t\tconst currentField = comics[field.db as keyof ComicsProps];\n\n\t\t\t\t\t\t\treturn field.db === \"description\" ? (\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tkey={field.db}\n\t\t\t\t\t\t\t\t\tclassName={textareaClasses}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Описание\"\n\t\t\t\t\t\t\t\t\tdefaultValue={currentField}\n\t\t\t\t\t\t\t\t\tdisabled={!adminMode}\n\t\t\t\t\t\t\t\t\t{...register(field.db)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tkey={field.db}\n\t\t\t\t\t\t\t\t\tclassName={inputClasses}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder={field.ui}\n\t\t\t\t\t\t\t\t\tdefaultValue={\n\t\t\t\t\t\t\t\t\t\tArray.isArray(currentField)\n\t\t\t\t\t\t\t\t\t\t\t? (currentField as string[]).join(\", \") || \"\"\n\t\t\t\t\t\t\t\t\t\t\t: currentField || \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdisabled={!adminMode}\n\t\t\t\t\t\t\t\t\t{...register(field.db)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t{adminMode && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className={buttonClasses}>\n\t\t\t\t\t\t\t\t\tОбновить\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button className={buttonClasses} onClick={handleDeleteComics}>\n\t\t\t\t\t\t\t\t\tУдалить\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t\t<ToastContainer />\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<ReactQueryDevtools initialIsOpen={false} />\n\t\t</>\n\t);\n};\n","import axios from \"axios\";\nimport { ROUTES } from \"Helpers\";\nimport { useQuery } from \"react-query\";\nimport { ComicsProps, UseGetComicsItemProps } from \"Types\";\n\nexport const useGetComicsItem = (\n\tid: string | undefined\n): UseGetComicsItemProps => {\n\tconst getComicsItem = async () => {\n\t\tconst { data } = await axios.get<ComicsProps>(\n\t\t\tROUTES.api.getComicsById(id),\n\t\t\t{ params: { id } }\n\t\t);\n\t\treturn data;\n\t};\n\n\tconst { isLoading, error, data, isFetching } = useQuery(\"comicsItem\", getComicsItem);\n\n\treturn { isLoading, error, data, isFetching };\n};\n","import React from \"react\";\n\nexport const NotFound = (): JSX.Element => {\n\treturn <p>Страница не найдена</p>;\n};\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useAppDispatch, useAppSelector } from \"Store/hooks\";\nimport { userSlice } from \"Store/userSliceReducer\";\n\nexport const LoginPage = (): JSX.Element => {\n\tconst { adminMode } = useAppSelector((state) => state.user);\n\tconst { register, handleSubmit } = useForm();\n\n\tconst dispatch = useAppDispatch();\n\n\tconst checkUser = (data: { user: string }) => {\n\t\tif (process.env.REACT_APP_USER === data.user) {\n\t\t\tdispatch(userSlice.actions.checkUser(data.user));\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"container mx-auto h-full grid grid-rows-1 grid-cols-1 items-center\">\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<h1 className=\"text-center\">Проверим, кто ты такой</h1>\n\t\t\t\t<p>{`Режим администратора ${adminMode ? \"включен\" : \"выключен\"}`}</p>\n\t\t\t\t<form\n\t\t\t\t\tname=\"login\"\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tclassName=\"my-2 mx-auto flex flex-col\"\n\t\t\t\t\tstyle={{ width: 320 }}\n\t\t\t\t\tonSubmit={handleSubmit(checkUser)}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"border-2 border-green-300 h-10 px-2 rounded-lg text-center focus:outline-none focus:border-yellow-300\"\n\t\t\t\t\t\tplaceholder=\"Введи логин\"\n\t\t\t\t\t\t{...register(\"user\")}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"bg-green-300 mt-2 h-10 rounded-lg text-white font-bold\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { ComicsForm, ComicsList, ComicsItem, NotFound, LoginPage } from \"Pages\";\nimport { useAppSelector } from \"Store/hooks\";\n\nexport const Main = (): JSX.Element => {\n\tconst { adminMode } = useAppSelector((state) => state.user);\n\treturn (\n\t\t<main className=\"my-3 px-5 w-full h-full\">\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"*\" element={<NotFound />}></Route>\n\t\t\t\t<Route path=\"/\" element={<ComicsList />}></Route>\n\t\t\t\t<Route path=\"/comics\" element={<ComicsList />}></Route>\n\t\t\t\t<Route path=\"/comics/:_id\" element={<ComicsItem />}></Route>\n\t\t\t\t<Route path=\"/login\" element={<LoginPage />}></Route>\n\t\t\t\t{adminMode && (\n\t\t\t\t\t<Route path=\"/add-comics\" element={<ComicsForm />}></Route>\n\t\t\t\t)}\n\t\t\t</Routes>\n\t\t</main>\n\t);\n};\n","import React from \"react\";\n\nexport const Footer = (): JSX.Element => {\n\treturn (\n\t\t<footer className=\"p-3 w-full bg-yellow-500 text-white font-bold\">\n\t\t\t@ 2021 Parrot Collection\n\t\t</footer>\n\t);\n};\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\nimport { Footer } from \"./Footer\";\n\nexport const Layout = (): JSX.Element => {\n\treturn (\n\t\t<div className=\"grid h-screen text-center wrapper\">\n\t\t\t<Header />\n\t\t\t<Main />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport { setupStore } from \"Store\";\nimport { Layout } from \"./Templates/Layout\";\n\nexport const App = (): JSX.Element => {\n\tconst queryClient = new QueryClient({\n\t\tdefaultOptions: {\n\t\t\tqueries: {\n\t\t\t\trefetchOnWindowFocus: false,\n\t\t\t\tkeepPreviousData: false,\n\t\t\t},\n\t\t},\n\t});\n\n\tconst store = setupStore();\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<QueryClientProvider client={queryClient}>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<Layout />\n\t\t\t\t</Provider>\n\t\t\t</QueryClientProvider>\n\t\t</HashRouter>\n\t);\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"Store/reducers\";\n\nexport const setupStore = () => {\n\treturn configureStore({ reducer: rootReducer });\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}