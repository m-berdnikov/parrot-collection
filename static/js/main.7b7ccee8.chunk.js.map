{"version":3,"sources":["Assets/logo.svg","Templates/Layout/Header/index.tsx","Templates/Pages/ComicsForm/index.tsx","Templates/Components/ComicsBlock/index.tsx","Templates/Components/Loader/index.tsx","Helpers/const.ts","Templates/Components/Alphabet/index.tsx","Templates/Pages/ComicsList/index.tsx","Hooks/useGetComicsList.ts","Templates/Pages/ComicsItem/index.tsx","Hooks/useGetComicsItem.ts","Templates/Pages/NotFound/index.tsx","Templates/Layout/Main/index.tsx","Templates/Layout/Footer/index.tsx","Templates/Layout/index.tsx","App.tsx","index.tsx"],"names":["Header","lineClass","className","src","logo","alt","width","height","href","ComicsForm","useForm","register","handleSubmit","reset","fieldClasses","inputClasses","textareaClasses","notify","message","toast","name","onSubmit","data","authors","split","artists","characters","genres","cover","title","newComics","description","edition","year","includes","volume","book","publisher","original","original_publisher","console","log","size","FR","FileReader","addEventListener","e","target","result","readAsDataURL","axios","post","process","then","response","catch","error","type","placeholder","ComicsBlock","comics","useState","collection","setCollection","sell","setSell","wishlist","setWishlist","handleClick","_id","onClick","Loader","ENGLISH_ALPHABET","RUSSIAN_ALPHABET","Alphabet","alphabet","currentLetter","handleChooseSection","event","currentTarget","id","map","letter","clsx","ComicsList","getAllComics","a","get","useQuery","isLoading","useGetComicsList","isListLoading","listError","comicsList","books","setBooks","library","setLibrary","isBooksLoading","setIsBooksLoading","setCurrentLetter","booksByLetter","filter","substring","toLowerCase","useEffect","newCollection","sort","b","onChange","val","value","trim","filteredItems","replace","length","initialIsOpen","ComicsItem","useNavigate","useParams","VISIBLE_FIELDS","getComicsItem","params","useGetComicsItem","Object","keys","key","currentItem","Array","isArray","item","NotFound","Main","location","useLocation","path","element","Footer","Layout","App","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","keepPreviousData","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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QA,GACN,IAAK,cACgB,IAAfK,IAAqC,IAAbI,GAC1BC,GAAY,GAEdJ,GAAeD,GACf,MACF,IAAK,OACHG,GAASD,GACT,MACF,IAAK,WACHG,GAAaD,KAKnB,OACE,sBAAKhE,UAAU,YAAf,UACG0D,EAAOhC,MACN,mBACE1B,UAAU,sBACVM,KAAI,oCAA+BoD,EAAOS,KAF5C,SAIE,qBACEnE,UAAU,8CACVC,IAAKyD,EAAOhC,MACZvB,IAAKuD,EAAO/B,UAIhB,mBACE3B,UAAU,+CACVM,KAAI,oCAA+BoD,EAAOS,KAF5C,eAKF,mBAAGnE,UAAU,sBAAb,SAAoC0D,EAAO/B,QAC3C,sBAAK3B,UAAU,kDAAf,UACE,qBACEA,UAAU,gEACV,YAAU,aACV,cAAa4D,EACbQ,QAAS,kBAAMF,EAAY,iBAE7B,qBACElE,UAAU,gEACV,YAAU,OACV,cAAa8D,EACbM,QAAS,kBAAMF,EAAY,WAE7B,qBACElE,UAAU,gEACV,YAAU,WACV,cAAagE,EACbI,QAAS,kBAAMF,EAAY,qB,MC3D9B,SAASG,IACd,OACE,qBAAKrE,UAAU,iBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,SACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,aAEjB,+BACE,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,+B,oCC9BGsE,EAAmB,CAC9B,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGWC,EAAmB,CAC9B,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,U,iBCpDWC,G,MAAW,SAAC,GAIU,IAHjCC,EAGgC,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","file":"static/js/main.7b7ccee8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9bfd69cb.svg\";","import React from \"react\";\nimport logo from \"../../../Assets/logo.svg\"\nexport function Header() {\n  const lineClass = \"px-2 inline-block underline underline-offset-4\";\n\n  return (\n    <header className=\"p-0.5 w-full bg-yellow-500\">\n      <img\n        src={logo}\n        alt=\"Parrot\"\n        width=\"60px\"\n        height=\"auto\"\n        className=\"mx-auto\"\n      />\n      <a className={lineClass} href=\"/parrot-collection/comics\">\n        Главная\n      </a>\n      <a className={lineClass} href=\"/parrot-collection/add-comics\">\n        Добавить комикс\n      </a>\n    </header>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { ComicsFormProps } from \"Types\";\n\nexport function ComicsForm() {\n  const { register, handleSubmit, reset } = useForm();\n  const formClasses = \"flex flex-col max-w-xs mt-2 mx-auto\";\n  const fieldClasses =\n    \"mb-2 px-2 border border-yellow-400\trounded focus:outline-none focus:border-pink-300\";\n  const inputClasses = `${fieldClasses} h-10 appearance-none`;\n  const textareaClasses = `${fieldClasses} pt-1 h-20 resize-none`;\n  const buttonClasses =\n    \"h-10 border border-transparent rounded bg-yellow-400 font-bold text-white\";\n\n  const notify = (message: string) => toast(message);\n\n  const onSubmit = (data: ComicsFormProps) => {\n    const authors = data.authors.split(\", \");\n    const artists = data.artists.split(\", \");\n    const characters = data.characters.split(\", \");\n    const genres = data.genres.split(\", \");\n    let cover: string | ArrayBuffer | null = \"\";\n\n    if (data.title) {\n      const newComics = {\n        title: data.title,\n        authors,\n        artists,\n        description: data.description,\n        characters,\n        cover,\n        genres,\n        edition: data.edition,\n        year: data.year,\n        includes: data.includes,\n        volume: data.volume,\n        book: data.book,\n        publisher: data.publisher,\n        original: data.original,\n        original_publisher: data.original_publisher,\n      };\n\n      if (data.cover[0]) {\n        console.log(data.cover[0].size);\n\n        if (data.cover[0].size > 100000) {\n          notify(\"Большой размер файла обложки\");\n        } else {\n          const FR = new FileReader();\n          FR.addEventListener(\"load\", function (e) {\n            cover = e.target!.result;\n          });\n          FR.readAsDataURL(data.cover[0]);\n\n          axios\n            .post(\n              `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/add`,\n              newComics\n            )\n            .then(function (response) {\n              console.log(response);\n              reset();\n              notify(\"Добавлено!\");\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        }\n      } else {\n        axios\n          .post(\n            `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/add`,\n            newComics\n          )\n          .then(function (response) {\n            console.log(response);\n            reset();\n            notify(\"Добавлено!\");\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n    }\n\n    // reset();\n  };\n\n  return (\n    <form\n      className={formClasses}\n      name=\"add-comics\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Название\"\n        {...register(\"title\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Авторы\"\n        {...register(\"authors\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Художники\"\n        {...register(\"artists\")}\n      />\n      <textarea\n        className={textareaClasses}\n        placeholder=\"Описание\"\n        {...register(\"description\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Персонаж/персонажи\"\n        {...register(\"characters\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Жанр/жанры\"\n        {...register(\"genres\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Тип издания\"\n        {...register(\"edition\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Включает выпуски\"\n        {...register(\"includes\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Том (серия), например, Venom Volume 1\"\n        {...register(\"volume\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Номер тома (книга в серии - 1, 2, 3 и т.д)\"\n        {...register(\"book\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Год издания\"\n        {...register(\"year\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Издатель\"\n        {...register(\"publisher\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Год издания оригинала\"\n        {...register(\"original\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Издатель оригинала\"\n        {...register(\"original_publisher\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"file\"\n        placeholder=\"Издатель оригинала\"\n        {...register(\"cover\")}\n      />\n      <button type=\"submit\" className={buttonClasses}>\n        Добавить\n      </button>\n      <ToastContainer />\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { ComicsProps } from \"Types\";\n\nexport function ComicsBlock(comics: ComicsProps) {\n  const [collection, setCollection] = useState(false);\n  const [sell, setSell] = useState(false);\n  const [wishlist, setWishlist] = useState(false);\n\n  const handleClick = (type: \"collection\" | \"read\" | \"wishlist\") => {\n    switch (type) {\n      case \"collection\":\n        if (collection === false && wishlist === true) {\n          setWishlist(false);\n        }\n        setCollection(!collection);\n        break;\n      case \"read\":\n        setSell(!sell);\n        break;\n      case \"wishlist\":\n        setWishlist(!wishlist);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"book grid\">\n      {comics.cover ? (\n        <a\n          className=\"block w-full h-full\"\n          href={`/parrot-collection/comics/${comics._id}`}\n        >\n          <img\n            className=\"book__img mx-auto mb-2 hover:cursor-pointer\"\n            src={comics.cover}\n            alt={comics.title}\n          />\n        </a>\n      ) : (\n        <a\n          className=\"block book__img book__img--mock mx-auto mb-2\"\n          href={`/parrot-collection/comics/${comics._id}`}\n        > </a>\n      )}\n      <p className=\"book__title text-sm\">{comics.title}</p>\n      <div className=\"book__buttons mt-3 mx-auto flex justify-between\">\n        <div\n          className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n          data-type=\"collection\"\n          data-status={collection}\n          onClick={() => handleClick(\"collection\")}\n        ></div>\n        <div\n          className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n          data-type=\"read\"\n          data-status={sell}\n          onClick={() => handleClick(\"read\")}\n        ></div>\n        <div\n          className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n          data-type=\"wishlist\"\n          data-status={wishlist}\n          onClick={() => handleClick(\"wishlist\")}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport function Loader() {\n  return (\n    <div className=\"loader-wrapper\">\n      <div className=\"loader\">\n        <div className=\"inner\">\n          <div className=\"left\"></div>\n          <div className=\"middle\"></div>\n          <div className=\"right\"></div>\n        </div>\n        <ul>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","export const ENGLISH_ALPHABET = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n\nexport const RUSSIAN_ALPHABET = [\n  \"а\",\n  \"б\",\n  \"в\",\n  \"г\",\n  \"д\",\n  \"е\",\n  \"ё\",\n  \"ж\",\n  \"з\",\n  \"и\",\n  \"й\",\n  \"к\",\n  \"л\",\n  \"м\",\n  \"н\",\n  \"о\",\n  \"п\",\n  \"р\",\n  \"с\",\n  \"т\",\n  \"у\",\n  \"ф\",\n  \"х\",\n  \"ц\",\n  \"ч\",\n  \"ш\",\n  \"щ\",\n  \"ь\",\n  \"ы\",\n  \"ъ\",\n  \"э\",\n  \"ю\",\n  \"я\",\n];\n","import React, { MouseEvent } from \"react\";\nimport clsx from \"classnames\";\nimport \"./style.scss\";\n\ntype AlphabetProps = {\n  alphabet: string[];\n  currentLetter: string;\n  handleChooseSection: (letter: string) => void;\n};\n\nexport const Alphabet = ({\n  alphabet,\n  currentLetter,\n  handleChooseSection,\n}: AlphabetProps): JSX.Element => {\n  const alphabetClass = \"alphabet flex justify-center mb-2\";\n  const letterClass =\n    \"alphabet__letter mx-px px-1 h-5 leading-5 cursor-pointer border-transparent border-solid border border-transparent uppercase hover:border-yellow-500\";\n  const activeLetterClass = \"border-yellow-500\";\n\n  const handleClick = (event: MouseEvent) =>\n    handleChooseSection(event.currentTarget.id);\n\n  return (\n    <div className={alphabetClass}>\n      {alphabet.map((letter) => (\n        <p\n          key={letter}\n          className={clsx(\n            letterClass,\n            currentLetter === letter && activeLetterClass\n          )}\n          id={letter}\n          onClick={handleClick}\n        >\n          {letter}\n        </p>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ComicsBlock } from \"../../Components/ComicsBlock\";\nimport { Loader } from \"../../Components/Loader\";\nimport { ComicsProps } from \"Types\";\nimport { useGetComicsList } from \"Hooks\";\nimport { ENGLISH_ALPHABET, RUSSIAN_ALPHABET } from \"Helpers\";\nimport { Alphabet } from \"Components\";\n\nimport \"./style.scss\";\n\nexport function ComicsList(): JSX.Element {\n  const {\n    isLoading: isListLoading,\n    error: listError,\n    data: comicsList,\n  } = useGetComicsList();\n\n  const [books, setBooks] = useState<ComicsProps[]>([]);\n  const [library, setLibrary] = useState<ComicsProps[]>([]);\n  const [isBooksLoading, setIsBooksLoading] = useState(false);\n  const [currentLetter, setCurrentLetter] = useState(\"\");\n\n  const handleChangeSearchValue = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setCurrentLetter(\"\");\n    const val = event.target.value.trim();\n    const filteredItems = library.filter((book) =>\n      book.title\n        .toLowerCase()\n        .replace(\".\", \"\")\n        .replace(\",\", \"\")\n        .replace(\"-\", \" \")\n        .replace(\"(\", \"\")\n        .replace(\")\", \"\")\n        .includes(val.toLowerCase().replace(\".\", \"\").replace(\"-\", \" \"))\n    );\n    setBooks(filteredItems);\n  };\n\n  const handleChooseSection = (letter: string) => {\n    setCurrentLetter(letter);\n\n    const booksByLetter = library.filter(\n      (book) => book.title.substring(0, 1).toLowerCase() === letter\n    );\n    console.log(booksByLetter);\n    setBooks(booksByLetter);\n  };\n\n  const handleClickAll = () => {\n    setBooks(library);\n    setCurrentLetter(\"\");\n  };\n\n  useEffect(() => {\n    if (comicsList) {\n      setIsBooksLoading(true);\n      const newCollection = comicsList.sort((a, b) =>\n        a.title > b.title ? 1 : -1\n      );\n\n      setBooks(newCollection);\n      setLibrary(newCollection);\n      setIsBooksLoading(false);\n    }\n  }, [comicsList]);\n\n  return (\n    <>\n      {comicsList && (\n        <>\n          <Alphabet\n            alphabet={RUSSIAN_ALPHABET}\n            currentLetter={currentLetter}\n            handleChooseSection={handleChooseSection}\n          />\n          <Alphabet\n            alphabet={ENGLISH_ALPHABET}\n            currentLetter={currentLetter}\n            handleChooseSection={handleChooseSection}\n          />\n          <p\n            className=\"mx-auto w-20 cursor-pointer border-transparent border-solid border border-transparent hover:border-yellow-500\"\n            onClick={handleClickAll}\n          >\n            Все\n          </p>\n          <input\n            type=\"text\"\n            placeholder=\"Название комикса\"\n            className=\"input mt-5 mx-auto mb-8 px-2.5 block h-7 max-w-xs w-full border border-yellow-300 rounded-md outline-none focus:border-pink-300\"\n            onChange={handleChangeSearchValue}\n          />\n          <div className=\"list m-auto flex justify-center flex-wrap\">\n            {books.length > 0 ? (\n              books.map((comics) => (\n                <ComicsBlock key={comics._id} {...comics} />\n              ))\n            ) : (\n              <p>Ничего не найдено :(</p>\n            )}\n          </div>\n        </>\n      )}\n      {(isListLoading || isBooksLoading) && <Loader />}\n      {listError && <p>Ничего не найдено :(</p>}\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  );\n}\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { UseGetComicsListProps } from \"Types\";\n\nexport const useGetComicsList = (): UseGetComicsListProps => {\n  const getAllComics = async () => {\n    const { data } = await axios.get(\n      `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/list`\n    );\n    return data;\n  };\n\n  const { isLoading, error, data } = useQuery(\"comics\", getAllComics);\n\n  return { isLoading, error, data };\n};\n","import axios from \"axios\";\nimport React from \"react\";\nimport { Loader } from \"Components/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ComicsProps } from \"Types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useGetComicsItem } from \"Hooks\";\nimport \"./style.scss\";\n\nexport const ComicsItem = () => {\n  const navigate = useNavigate();\n  const { _id } = useParams<{ _id: string }>();\n\n  const VISIBLE_FIELDS = [\n    \"title\",\n    \"authors\",\n    \"artists\",\n    \"description\",\n    \"characters\",\n    \"genres\",\n    \"edition\",\n    \"includes\",\n    \"volume\",\n    \"book\",\n    \"year\",\n    \"publisher\",\n    \"original\",\n    \"original_publisher\",\n  ];\n\n  const deleteComicsItem = async () =>\n    await axios\n      .get<string>(\n        `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/${_id}/delete`,\n        { params: { _id } }\n      )\n      .then((response) =>\n        response.data === \"Удалено\" ? navigate(\"/parrot-collection/comics\") : console.log({ response })\n      );\n  const handleDeleteComics = () => {\n    alert(\"Вы уверены?\");\n    deleteComicsItem();\n  };\n\n  const { isLoading, error, data } = useGetComicsItem(_id);\n\n  error && console.log({ error });\n\n  return (\n    <>\n      {error && <p>При загрузке данных произошла ошибка</p>}\n      {isLoading && <Loader />}\n      {data && (\n        <div>\n          {data.cover ? (\n            <img\n              className=\"book__img mx-auto mb-2 hover:cursor-pointer\"\n              src={data.cover}\n              alt={data.title}\n            />\n          ) : (\n            <div className=\"book__img book__img--mock mx-auto mb-2 hover:cursor-pointer\"></div>\n          )}\n          {Object.keys(data)\n            .filter(\n              (key) =>\n                VISIBLE_FIELDS.includes(key) && data[key as keyof ComicsProps]\n            )\n            .map((key) => {\n              const currentItem = data[key as keyof ComicsProps];\n\n              return Array.isArray(currentItem) ? (\n                <div key={key} className=\"info-list\">\n                  {currentItem.map((item) => (\n                    <p key={item}>{item}</p>\n                  ))}\n                </div>\n              ) : (\n                <p key={key}>{currentItem}</p>\n              );\n            })}\n\n          {/* <button\n            className=\"mt-4 mx-auto block w-48 h-8 bg-yellow-500\"\n            onClick={handleDeleteComics}\n          >\n            Удалить\n          </button> */}\n        </div>\n      )}\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  );\n};\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { ComicsProps, UseGetComicsItemProps } from \"Types\";\n\nexport const useGetComicsItem = (\n  id: string | undefined\n): UseGetComicsItemProps => {\n  const getComicsItem = async () => {\n    const { data } = await axios.get<ComicsProps>(\n      `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/${id}`,\n      { params: { id } }\n    );\n    return data;\n  };\n\n  const { isLoading, error, data } = useQuery(\"comicsItem\", getComicsItem);\n\n  return { isLoading, error, data };\n};\n","import React from \"react\";\n\nexport const NotFound = () => {\n  return <p>Страница не найдена</p>;\n};\n","import React from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { ComicsForm, ComicsList, ComicsItem, NotFound } from \"Pages\";\n\nexport function Main() {\n  const location = useLocation();\n\n  console.log({ location });\n  return (\n    <main className=\"my-3 px-10 w-full h-full\">\n      <Routes>\n        <Route path=\"*\" element={<NotFound />}></Route>\n        <Route path=\"/parrot-collection\" element={<ComicsList />}></Route>\n        <Route path=\"/parrot-collection/add-comics\" element={<ComicsForm />}></Route>\n        <Route path=\"/parrot-collection/comics\" element={<ComicsList />}></Route>\n        <Route path=\"parrot-collection/comics/:_id\" element={<ComicsItem />}></Route>\n      </Routes>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport function Footer() {\n  return <footer className=\"p-3 w-full bg-yellow-500 text-white font-bold\">@ 2021 Parrot Collection</footer>;\n}\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\nimport { Footer } from \"./Footer\";\n\nexport function Layout() {\n  return (\n    <div className=\"grid h-screen text-center wrapper\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Layout } from \"./Templates/Layout\";\n\nfunction App() {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n        keepPreviousData: false,\n      },\n    },\n  });\n\n  return (\n    <BrowserRouter>\n      <QueryClientProvider client={queryClient}>\n        <Layout />\n      </QueryClientProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}