{"version":3,"sources":["Assets/logo.svg","Layout/Components/Header/index.tsx","Components/ComicsForm/index.tsx","Components/ComicsItem/index.tsx","Components/ComicsList/index.tsx","Layout/Components/Main/index.tsx","Layout/Components/Footer/index.tsx","Layout/index.tsx","App.tsx","index.tsx"],"names":["Header","lineClass","className","src","logo","alt","width","height","href","ComicsForm","useForm","register","handleSubmit","reset","fieldClasses","inputClasses","textareaClasses","notify","message","toast","name","onSubmit","data","authors","split","artists","characters","genres","cover","title","newComics","description","edition","year","includes","volume","book","publisher","original","original_publisher","console","log","size","FR","FileReader","addEventListener","e","target","result","readAsDataURL","axios","post","process","then","response","catch","error","type","placeholder","ComicsItem","comics","useState","collection","setCollection","sell","setSell","wishlist","setWishlist","handleClick","useMutation","comicsItem","delete","_id","onClick","queryClient","QueryClient","ComicsList","QueryClientProvider","client","ComicsListGet","getAllComics","a","get","useQuery","isLoading","isFetching","RenderComicsList","initialIsOpen","newArr","Object","values","sort","b","books","setBooks","onChange","event","val","value","trim","filteredItems","filter","toLowerCase","replace","length","map","Main","path","exact","component","from","to","Footer","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49d47100.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9bfd69cb.svg\";","import React from \"react\";\nimport logo from \"../../../Assets/logo.svg\";\n\nexport function Header() {\n  const lineClass = \"px-2 inline-block underline underline-offset-2\";\n\n  return (\n    <header className=\"p-0.5 w-full bg-yellow-500\">\n      <img\n        src={logo}\n        alt=\"Parrot\"\n        width=\"60px\"\n        height=\"auto\"\n        className=\"mx-auto\"\n      />\n      <a className={lineClass} href=\"/parrot-collection/#/comics\">\n        Главная\n      </a>\n      <a className={lineClass} href=\"/parrot-collection/#/add-comics\">\n        Добавить комикс\n      </a>\n    </header>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nexport function ComicsForm() {\n  const { register, handleSubmit, reset } = useForm();\n  const formClasses = \"flex flex-col max-w-xs mt-2 mx-auto\";\n  const fieldClasses =\n    \"mb-2 px-2 border border-yellow-400\trounded focus:outline-none focus:border-pink-300\";\n  const inputClasses = `${fieldClasses} h-10 appearance-none`;\n  const textareaClasses = `${fieldClasses} pt-1 h-20 resize-none`;\n  const buttonClasses =\n    \"h-10 border border-transparent rounded bg-yellow-400 font-bold text-white\";\n\n  const notify = (message: string) => toast(message);\n\n  type Comics = {\n    title: string;\n    authors: string;\n    artists: string;\n    description: string;\n    characters: string;\n    genres: string;\n    edition: string;\n    includes: string;\n    volume: string;\n    book: number;\n    year: number;\n    publisher: string;\n    cover: any;\n    original: number;\n    original_publisher: string;\n  };\n\n  // const date1 = Date.now();\n  // const date2 = Date.now() + 1;\n  //   const date3 = Date.now() + 2;\n\n  //   const activities = [\n  //     { title: \"Hiking\", date: date1 },\n  //     { title: \"Shopping\", date: date3 },\n  //     { title: \"Trekking\", date: date2 },\n  //   ];\n\n  //   const sortedActivities = activities.sort((a, b) => b.date - a.date);\n\n  //   console.log(sortedActivities);\n\n  const onSubmit = (data: Comics) => {\n    const authors = data.authors.split(\", \");\n    const artists = data.artists.split(\", \");\n    const characters = data.characters.split(\", \");\n    const genres = data.genres.split(\", \");\n    let cover: string | ArrayBuffer | null = \"\";\n\n    if (data.title) {\n      const newComics = {\n        title: data.title,\n        authors,\n        artists,\n        description: data.description,\n        characters,\n        cover,\n        genres,\n        edition: data.edition,\n        year: data.year,\n        includes: data.includes,\n        volume: data.volume,\n        book: data.book,\n        publisher: data.publisher,\n        original: data.original,\n        original_publisher: data.original_publisher,\n      };\n\n      if (data.cover[0]) {\n        console.log(data.cover[0].size);\n\n        if (data.cover[0].size > 100000) {\n          notify(\"Большой размер файла обложки\")\n        } else {\n          var FR = new FileReader();\n          FR.addEventListener(\"load\", function (e) {\n            cover = e.target!.result;\n          });\n          FR.readAsDataURL(data.cover[0]);\n\n          axios\n            .post(\n              `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/add`,\n              newComics\n            )\n            .then(function (response) {\n              console.log(response);\n              reset();\n              notify(\"Добавлено!\");\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        }\n      } else {\n        axios\n          .post(\n            `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/add`,\n            newComics\n          )\n          .then(function (response) {\n            console.log(response);\n            reset();\n            notify(\"Добавлено!\");\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n    }\n\n    // reset();\n  };\n\n  return (\n    <form\n      className={formClasses}\n      name=\"add-comics\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Название\"\n        {...register(\"title\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Авторы\"\n        {...register(\"authors\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Художники\"\n        {...register(\"artists\")}\n      />\n      <textarea\n        className={textareaClasses}\n        placeholder=\"Описание\"\n        {...register(\"description\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Персонаж/персонажи\"\n        {...register(\"characters\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Жанр/жанры\"\n        {...register(\"genres\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Тип издания\"\n        {...register(\"edition\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Включает выпуски\"\n        {...register(\"includes\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Том (серия), например, Venom Volume 1\"\n        {...register(\"volume\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Номер тома (книга в серии - 1, 2, 3 и т.д)\"\n        {...register(\"book\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Год издания\"\n        {...register(\"year\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Издатель\"\n        {...register(\"publisher\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Год издания оригинала\"\n        {...register(\"original\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Издатель оригинала\"\n        {...register(\"original_publisher\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"file\"\n        placeholder=\"Издатель оригинала\"\n        {...register(\"cover\")}\n      />\n      <button type=\"submit\" className={buttonClasses}>\n        Добавить\n      </button>\n      <ToastContainer />\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useMutation } from \"react-query\";\n\ninterface Comics {\n  _id: number;\n  title: string;\n  authors: string[];\n  description: string;\n  characters: string[];\n  cover: string;\n  edition: string;\n  year: string;\n  original: string;\n  owned: string[];\n  sell: string[];\n  wishlist: string[];\n}\n\nexport function ComicsItem(comics: Comics) {\n  const currentUser = \"m.radik25@gmail.com\";\n  const [collection, setCollection] = useState(false);\n  const [sell, setSell] = useState(false);\n  const [wishlist, setWishlist] = useState(false);\n  const mutation = useMutation((comicsItem: Comics) =>\n    axios.delete(`/comics/${comicsItem._id}`, {})\n  );\n\n  const handleClick = (type: \"collection\" | \"read\" | \"wishlist\") => {\n    switch (type) {\n      case \"collection\":\n        if (collection === false && wishlist === true) {\n          setWishlist(false);\n        }\n        setCollection(!collection);\n        break;\n      case \"read\":\n        setSell(!sell);\n        break;\n      case \"wishlist\":\n        setWishlist(!wishlist);\n        break;\n    }\n  };\n\n  // useEffect(() => {\n  //   setCollection(comics.owned.includes(currentUser));\n  //   setSell(comics.sell.includes(currentUser));\n  //   setWishlist(comics.wishlist.includes(currentUser));\n  // }, [comics]);\n\n  return (\n    <div className=\"book grid\">\n      {comics.cover ? (\n        <img\n          className=\"book__img mx-auto mb-2 hover:cursor-pointer\"\n          src={comics.cover}\n          alt={comics.title}\n        />\n      ) : (\n        <div className=\"book__img book__img--mock mx-auto mb-2 hover:cursor-pointer\"></div>\n      )}\n      <p className=\"book__title text-sm\">{comics.title}</p>\n      <div className=\"book__buttons mt-3 mx-auto flex justify-between\">\n        <div\n          className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n          data-type=\"collection\"\n          data-status={collection}\n          onClick={() => handleClick(\"collection\")}\n        ></div>\n        <div\n          className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n          data-type=\"read\"\n          data-status={sell}\n          onClick={() => handleClick(\"read\")}\n        ></div>\n        <div\n          className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n          data-type=\"wishlist\"\n          data-status={wishlist}\n          onClick={() => handleClick(\"wishlist\")}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useQuery, QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport \"./style.scss\";\nimport { ComicsItem } from \"../ComicsItem\";\n\ninterface Comics {\n  _id: number;\n  title: string;\n  authors: string[];\n  description: string;\n  characters: string[];\n  cover: string;\n  edition: string;\n  year: string;\n  original: string;\n  owned: string[];\n  sell: string[];\n  wishlist: string[];\n}\n\nconst queryClient = new QueryClient();\n\nexport function ComicsList() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ComicsListGet />\n    </QueryClientProvider>\n  );\n}\n\nfunction ComicsListGet() {\n  const getAllComics = async () => {\n    const { data } = await axios.get(\n      `${process.env.REACT_APP_REQUEST_URL || \"\"}/api/comics/list`\n    );\n    return data;\n  };\n\n  const { isLoading, error, data, isFetching } = useQuery(\n    \"comics\",\n    getAllComics\n  );\n\n  return (\n    <>\n      {data ? <RenderComicsList {...data} /> : <p>Loading</p>}\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  );\n}\n\nfunction RenderComicsList(collection: Comics[]) {\n  const newCollection = Object.values(collection);\n\n  const newArr = newCollection.sort(function (a, b) {\n    let res = 0;\n    a.title > b.title ? (res = 1) : (res = -1);\n    return res;\n  });\n\n  // const newArr = newCollection.sort((a, b) =>\n  //   a.title.localeCompare(b.title)\n  // );\n\n  const [books, setBooks] = useState(newArr);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.target.value.trim();\n    const filteredItems = newArr.filter((book) =>\n      book.title\n        .toLowerCase()\n        .replace(\".\", \"\")\n        .replace(\"-\", \" \")\n        .includes(val.toLowerCase().replace(\".\", \"\").replace(\"-\", \" \"))\n    );\n    setBooks(filteredItems);\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Название комикса\"\n        className=\"input mt-5 mx-auto mb-8 px-2.5 block h-7 max-w-xs w-full border border-yellow-300 rounded-md outline-none focus:border-pink-300\"\n        onChange={handleChange}\n      />\n      <div className=\"list m-auto flex justify-center flex-wrap\">\n        {books.length > 0 ? (\n          books.map((comics) => <ComicsItem key={comics._id} {...comics} />)\n        ) : (\n          <p>Ничего не найдено :(</p>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ComicsForm } from \"../../../Components/ComicsForm/index\";\nimport { ComicsList } from \"../../../Components/ComicsList/index\";\n\nexport function Main() {\n  return (\n    <main className=\"my-3 px-10 w-full h-full\">\n      <Switch>\n        <Route path=\"/add-comics\" exact component={ComicsForm}></Route>\n        <Route path=\"/comics\" exact component={ComicsList}></Route>\n        <Redirect from=\"*\" exact to=\"/comics\"></Redirect>\n      </Switch>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport function Footer() {\n  return <footer className=\"p-3 w-full bg-yellow-500 text-white font-bold\">@ 2021 Parrot Collection</footer>;\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport { Header } from \"./Components/Header\";\nimport { Main } from \"./Components/Main\";\nimport { Footer } from \"./Components/Footer\";\n\nexport function Layout() {\n  return (\n    <div className=\"grid h-screen text-center wrapper\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Layout } from \"./Layout/index\";\n\nfunction App() {\n  return (\n    <Router>\n      <Layout />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}