{"version":3,"sources":["assets/logo.svg","Layout/components/Header/index.tsx","Components/ComicsForm/index.tsx","Components/ComicsItem/index.tsx","Components/ComicsList/index.tsx","Layout/components/Main/index.tsx","Layout/components/Footer/index.tsx","Layout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","console","log","logo","className","src","alt","width","height","ComicsForm","useForm","register","handleSubmit","fieldClasses","reset","inputClasses","textareaClasses","name","onSubmit","data","authors","split","characters","genres","cover","size","FR","FileReader","addEventListener","e","target","result","newComics","title","description","edition","year","includes","volume","book","publisher","original","original_publisher","axios","post","readAsDataURL","type","placeholder","ComicsItem","comics","useState","collection","setCollection","sell","setSell","wishlist","setWishlist","handleClick","useMutation","comicsItem","delete","id","onClick","queryClient","QueryClient","ComicsList","QueryClientProvider","client","ComicsListGet","getAllComics","a","get","process","useQuery","isLoading","error","isFetching","RenderComicsList","initialIsOpen","newArr","Object","values","sort","b","books","setBooks","onChange","event","val","value","trim","filteredItems","filter","toLowerCase","replace","length","map","Main","path","exact","component","from","to","Footer","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.375a8c35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9bfd69cb.svg\";","import React from \"react\";\nimport logo from \"../../../assets/logo.svg\";\n\nexport function Header() {\n  console.log(logo);\n\n  return (\n    <header className=\"p-0.5 w-full bg-yellow-500\">\n      <img\n        src={logo}\n        alt=\"Parrot\"\n        width=\"60px\"\n        height=\"auto\"\n        className=\"mx-auto\"\n      />\n    </header>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport function ComicsForm() {\n  const { register, handleSubmit, reset } = useForm();\n  const formClasses = \"flex flex-col max-w-xs mt-2 mx-auto\";\n  const fieldClasses =\n    \"mb-2 px-2 border border-yellow-400\trounded focus:outline-none focus:border-pink-300\";\n  const inputClasses = `${fieldClasses} h-10 appearance-none`;\n  const textareaClasses = `${fieldClasses} pt-1 h-20 resize-none`;\n  const buttonClasses =\n    \"h-10 border border-transparent rounded bg-yellow-400 font-bold text-white\";\n\n  type Comics = {\n    title: string;\n    authors: string;\n    description: string;\n    characters: string;\n    genres: string;\n    edition: string;\n    includes: string;\n    volume: string;\n    book: number;\n    year: number;\n    publisher: string;\n    cover: any;\n    original: number;\n    original_publisher: string;\n  };\n\n  // const date1 = Date.now();\n  // const date2 = Date.now() + 1;\n  //   const date3 = Date.now() + 2;\n\n  //   const activities = [\n  //     { title: \"Hiking\", date: date1 },\n  //     { title: \"Shopping\", date: date3 },\n  //     { title: \"Trekking\", date: date2 },\n  //   ];\n\n  //   const sortedActivities = activities.sort((a, b) => b.date - a.date);\n\n  //   console.log(sortedActivities);\n\n  const onSubmit = (data: Comics) => {\n    const authors = data.authors.split(\", \");\n    const characters = data.characters.split(\", \");\n    const genres = data.genres.split(\", \");\n    let cover: string | ArrayBuffer | null = \"\";\n    if (data.cover[0]) {\n      console.log(data.cover[0].size);\n\n      if (data.cover[0].size > 100000) {\n        console.log(\"big file\");\n      } else {\n        var FR = new FileReader();\n        FR.addEventListener(\"load\", function (e) {\n          cover = e.target!.result;\n\n          const newComics = {\n            title: data.title,\n            authors,\n            description: data.description,\n            characters,\n            cover,\n            genres,\n            edition: data.edition,\n            year: data.year,\n            includes: data.includes,\n            volume: data.volume,\n            book: data.book,\n            publisher: data.publisher,\n            original: data.original,\n            original_publisher: data.original_publisher,\n          };\n\n          console.log(newComics);\n          axios.post(\"/api/comics/add\", newComics);\n        });\n        FR.readAsDataURL(data.cover[0]);\n      }\n    }\n\n    // reset();\n  };\n\n  return (\n    <form\n      className={formClasses}\n      name=\"add-comics\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Название\"\n        {...register(\"title\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Автор/авторы\"\n        {...register(\"authors\")}\n      />\n      <textarea\n        className={textareaClasses}\n        placeholder=\"Описание\"\n        {...register(\"description\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Персонаж/персонажи\"\n        {...register(\"characters\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Жанр/жанры\"\n        {...register(\"genres\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Тип издания\"\n        {...register(\"edition\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Включает выпуски\"\n        {...register(\"includes\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Том (серия), например, Venom Volume 1\"\n        {...register(\"volume\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Номер тома (книга в серии - 1, 2, 3 и т.д)\"\n        {...register(\"book\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Год издания\"\n        {...register(\"year\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Издатель\"\n        {...register(\"publisher\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"number\"\n        placeholder=\"Год издания оригинала\"\n        {...register(\"original\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"text\"\n        placeholder=\"Издатель оригинала\"\n        {...register(\"original_publisher\")}\n      />\n      <input\n        className={inputClasses}\n        type=\"file\"\n        placeholder=\"Издатель оригинала\"\n        {...register(\"cover\")}\n      />\n      <button type=\"submit\" className={buttonClasses}>\n        Добавить\n      </button>\n    </form>\n  );\n}\n","import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport { useMutation } from 'react-query';\n\ninterface Comics {\n    id: number;\n    title: string;\n    authors: string[];\n    description: string;\n    characters: string[];\n    cover: string;\n    edition: string;\n    year: string;\n    original: string;\n    owned: string[];\n    sell: string[];\n    wishlist: string[];\n  };\n\nexport function ComicsItem(comics: Comics) {\n    const currentUser = \"m.radik25@gmail.com\";\n    const [collection, setCollection] = useState(false);\n    const [sell, setSell] = useState(false);\n    const [wishlist, setWishlist] = useState(false);\n    const mutation = useMutation((comicsItem: Comics) => axios.delete(`/comics/${comicsItem.id}`, {}))\n\n  \n    const handleClick = (type: \"collection\" | \"sell\" | \"wishlist\") => {\n      switch (type) {\n        case \"collection\":\n          if (collection === false && wishlist === true) {\n            setWishlist(false);\n          }\n          setCollection(!collection);\n          break;\n        case \"sell\":\n          setSell(!sell);\n          break;\n        case \"wishlist\":\n          setWishlist(!wishlist);\n          break;\n      }\n    };\n  \n    // useEffect(() => {\n    //   setCollection(comics.owned.includes(currentUser));\n    //   setSell(comics.sell.includes(currentUser));\n    //   setWishlist(comics.wishlist.includes(currentUser));\n    // }, [comics]);\n  \n    return (\n      <div className=\"book grid\">\n        {comics.cover ? (\n          <img\n            className=\"book__img mx-auto mb-2 hover:cursor-pointer\"\n            src={comics.cover}\n            alt={comics.title}\n          />\n        ) : (\n          <div className=\"book__img book__img--mock mx-auto mb-2 hover:cursor-pointer\"></div>\n        )}\n        <p className=\"book__title place-self-center\">{comics.title}</p>\n        <div className=\"book__buttons mt-3 mx-auto flex justify-between\">\n          <div\n            className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n            data-type=\"collection\"\n            data-status={collection}\n            onClick={() => handleClick(\"collection\")}\n          ></div>\n          <div\n            className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n            data-type=\"sell\"\n            data-status={sell}\n            onClick={() => handleClick(\"sell\")}\n          ></div>\n          <div\n            className=\"book__buttons-item bg-center bg-cover bg-no-repeat transition\"\n            data-type=\"wishlist\"\n            data-status={wishlist}\n            onClick={() => handleClick(\"wishlist\")}\n          ></div>\n        </div>\n      </div>\n    );\n  }","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  useQuery,\n  useMutation,\n  useQueryClient,\n  QueryClient,\n  QueryClientProvider,\n} from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport \"./style.scss\";\nimport { ComicsItem } from \"../ComicsItem/index\";\n\ninterface Comics {\n  id: number;\n  title: string;\n  authors: string[];\n  description: string;\n  characters: string[];\n  cover: string;\n  edition: string;\n  year: string;\n  original: string;\n  owned: string[];\n  sell: string[];\n  wishlist: string[];\n}\n\nconst queryClient = new QueryClient();\n\nexport function ComicsList() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ComicsListGet />\n    </QueryClientProvider>\n  );\n}\n\nfunction ComicsListGet() {\n  const getAllComics = async () => {\n    const { data } = await axios.get(`${process.env.REACT_APP_REQUEST_URL}/api/comics/list`);\n    return data;\n  };\n\n  const { isLoading, error, data, isFetching } = useQuery(\n    \"comics\",\n    getAllComics\n  );\n\n  return (\n    <>\n      {data ? <RenderComicsList {...data} /> : <p>Loading</p>}\n\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  );\n}\n\nfunction RenderComicsList(collection: Comics[]) {\n  const newCollection = Object.values(collection);\n\n  \n    const newArr = newCollection.sort(function (a, b) {\n      if (a.title < b.title) {\n        return 1;\n      }\n      if (a.title > b.title) {\n        return -1;\n      }\n      // a должно быть равным b\n      return 0;\n    });\n  \n  \n  // const newArr = newCollection.sort((a, b) =>\n  //   a.title.localeCompare(b.title)\n  // );\n\n  const [books, setBooks] = useState(newArr);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.target.value.trim();\n    const filteredItems = newArr.filter((book) =>\n      book.title\n        .toLowerCase()\n        .replace(\".\", \"\")\n        .includes(val.toLowerCase().replace(\".\", \"\"))\n    );\n    setBooks(filteredItems);\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Название комикса\"\n        className=\"input mt-5 mx-auto px-2.5 block h-7 max-w-xs w-full border border-yellow-300 rounded-md outline-none focus:border-pink-300\"\n        onChange={handleChange}\n      />\n      <div className=\"list m-auto flex justify-center flex-wrap\">\n        {books.length > 0 ? (\n          books.map((comics) => <ComicsItem key={comics.id} {...comics} />)\n        ) : (\n          <p>Ничего не найдено :(</p>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ComicsForm } from \"../../../Components/ComicsForm/index\";\nimport {ComicsList} from \"../../../Components/ComicsList/index\"\n\nexport function Main() {\n  return (\n    <main className=\"my-3 px-10 w-full h-full\">\n      <Switch>\n        <Route path=\"/add-comics\" exact component={ComicsForm}></Route>\n        <Route path=\"/comics\" exact component={ComicsList}></Route>\n        <Redirect from=\"*\" exact to=\"/comics\"></Redirect>\n      </Switch>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport function Footer() {\n  return <footer className=\"p-3 w-full bg-yellow-500 text-white font-bold\">@ 2021 Parrot Collection</footer>;\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport { Header } from \"./components/Header\";\nimport { Main } from \"./components/Main\";\nimport { Footer } from \"./components/Footer\";\n\nexport function Layout() {\n  return (\n    <div className=\"grid h-screen text-center wrapper\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Layout } from \"./Layout/index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Layout />\n       </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}